define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data
LogFile   %ROOT%\data\nxlog.log

<Extension syslog>
  Module xm_syslog
</Extension>

<Extension multiline-gw-datetime-header>
  Module xm_multiline
  HeaderLine /^\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d\s|C:\\Users\\task_\d\d\d\d\d\d\d\d\d\d>/
</Extension>

<Input eventlog_apps>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Provider[@Name='OpenCloudConfig'] or Provider[@Name='MaintainSystem']]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_apps_dsc>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Provider[@Name='occ-dsc']]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_basic>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="Security">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="System">*[System[Level=1 or Level=2 or Level=3 or EventID=1074]]</Select>\
            <Select Path="HardwareEvents">*[System[Level=1 or Level=2 or Level=3]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_operational>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Microsoft-Windows-DSC/Operational">*</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_audit>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Microsoft-Windows-TerminalServices-LocalSessionManager/Operational">*</Select>\
            <Select Path="OpenSSH/Operational">*</Select>\
          </Query>\
        </QueryList>
</Input>

<Input generic_worker_log>
  Module im_file
  File 'C:/generic-worker/generic-worker.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType multiline-gw-datetime-header
  Exec if $raw_event =~ /^(\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d)\s(.*)/s { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'generic-worker';
</Input>

<Input generic_worker_wrapper_log>
  Module im_file
  File 'C:/generic-worker/generic-worker-wrapper.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'generic-worker-wrapper';
  Exec if ($raw_event =~ /accessToken|livelogSecret/) drop();
</Input>

<Input generic_worker_service_log>
  Module im_file
  File 'C:/generic-worker/generic-worker-service.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType multiline-gw-datetime-header
  Exec if $raw_event =~ /^(\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d)\s(.*)/s { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'generic-worker';
</Input>

<Input dsc_run_log>
  Module im_file
  File 'C:\log\\*dsc-run.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'dsc-run';
</Input>

<Input nxlog>
  Module im_file
  File 'C:/Program Files (x86)/nxlog/data/nxlog.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec if $raw_event =~ /^(\d\d\d\d-\d\d-\d\d\s\d\d:\d\d:\d\d)\s(.*)$/ { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'nxlog';
</Input>

<Output mdc1_aggregator>
  Module om_tcp
  Host log-aggregator.srv.releng.mdc1.mozilla.com
  Port 514
  Exec $Hostname = lc(hostname_fqdn());
  Exec to_syslog_ietf();
</Output>

<Route eventlog_apps_mdc1_aggregator>
  Path eventlog_apps => mdc1_aggregator
</Route>

<Route eventlog_apps_dsc_mdc1_aggregator>
  Path eventlog_apps_dsc => mdc1_aggregator
</Route>

<Route eventlog_basic_mdc1_aggregator>
  Path eventlog_basic => mdc1_aggregator
</Route>

<Route eventlog_operational_mdc1_aggregator>
  Path eventlog_operational => mdc1_aggregator
</Route>

<Route eventlog_audit_mdc1_aggregator>
  Path eventlog_audit => mdc1_aggregator
</Route>

<Route generic_worker_log_mdc1_aggregator>
  Path generic_worker_log => mdc1_aggregator
</Route>

<Route generic_worker_wrapper_log_mdc1_aggregator>
  Path generic_worker_wrapper_log => mdc1_aggregator
</Route>

<Route generic_worker_service_log_mdc1_aggregator>
  Path generic_worker_service_log => mdc1_aggregator
</Route>

<Route dsc_run_log_mdc1_aggregator>
  Path dsc_run_log => mdc1_aggregator
</Route>

<Route nxlog_mdc1_aggregator>
  Path nxlog => mdc1_aggregator
</Route>