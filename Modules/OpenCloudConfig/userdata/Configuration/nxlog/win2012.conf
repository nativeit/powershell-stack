define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data
LogFile   %ROOT%\data\nxlog.log

<Extension syslog>
  Module xm_syslog
</Extension>

<Extension multiline-datetime-header>
  Module xm_multiline
  HeaderLine /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.\d\d\dZ:\s/
</Extension>

<Extension multiline-gw-datetime-header>
  Module xm_multiline
  HeaderLine /^\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d\s|Z:\\task_\d\d\d\d\d\d\d\d\d\d>/
</Extension>

<Extension charconv>
  Module xm_charconv
  AutodetectCharsets UTF-16, UTF-16LE, UTF-32, ISO8859-2
</Extension>

<Extension fileop>
  Module xm_fileop
</Extension>

<Input eventlog_apps>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Provider[@Name='OpenCloudConfig'] or Provider[@Name='HaltOnIdle'] or Provider[@Name='MaintainSystem']]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_apps_dsc>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Provider[@Name='occ-dsc']]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_basic>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="Security">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="System">*[System[Level=1 or Level=2 or Level=3 or EventID=1074]]</Select>\
            <Select Path="HardwareEvents">*[System[Level=1 or Level=2 or Level=3]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_ec2>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="EC2ConfigService">*[System[Level=1 or Level=2 or Level=3]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_operational>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Microsoft-Windows-DSC/Operational">*</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_audit>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Microsoft-Windows-TerminalServices-LocalSessionManager/Operational">*</Select>\
            <Select Path="OpenSSH/Operational">*</Select>\
          </Query>\
        </QueryList>
</Input>

<Input generic_worker_log>
  Module im_file
  File 'C:/generic-worker/generic-worker.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType multiline-gw-datetime-header
  Exec if $raw_event =~ /^(\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d)\s(.*)/s { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'generic-worker';
</Input>

<Input generic_worker_wrapper_log>
  Module im_file
  File 'C:/generic-worker/generic-worker-wrapper.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'generic-worker-wrapper';
</Input>

<Input generic_worker_service_log>
  Module im_file
  File 'C:\log\taskcluster-generic-worker-service-*.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'taskcluster-generic-worker';
</Input>

<Input taskcluster_worker_runner_log>
  Module im_file
  File 'C:\log\taskcluster-worker-runner-service-*.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'taskcluster-worker-runner';
</Input>

<Input ec2_config_log>
  Module im_file
  File 'C:/Program Files/Amazon/Ec2ConfigService/Logs/Ec2ConfigLog.txt'
  SavePos TRUE
  ReadFromLast TRUE
  InputType multiline-datetime-header
  Exec if $raw_event =~ /^(\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.\d\d\dZ):\s(.*)$/s { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'ec2-config';
</Input>

<Input ed25519_public_key>
  Module im_file
  File 'C:\generic-worker\ed25519-public.key'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'ed25519-public-key';
</Input>

<Input nxlog>
  Module im_file
  File 'C:/Program Files (x86)/nxlog/data/nxlog.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec if $raw_event =~ /^(\d\d\d\d-\d\d-\d\d\s\d\d:\d\d:\d\d)\s(.*)$/ { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'nxlog';
</Input>

<Output papertrail>
  Module om_ssl
  Host logs.papertrailapp.com
  Port 52806
  CAFile %ROOT%\cert\papertrail-bundle.pem
  AllowUntrusted FALSE
  Exec $Hostname = lc(hostname_fqdn());
  Exec to_syslog_ietf();
</Output>

<Route ed25519_public_key_papertrail>
  Path ed25519_public_key => papertrail
</Route>

<Route eventlog_apps_papertrail>
  Path eventlog_apps => papertrail
</Route>

<Route eventlog_apps_dsc_papertrail>
  Path eventlog_apps_dsc => papertrail
</Route>

<Route eventlog_basic_papertrail>
  Path eventlog_basic => papertrail
</Route>

<Route eventlog_ec2_papertrail>
  Path eventlog_ec2 => papertrail
</Route>

<Route eventlog_operational_papertrail>
  Path eventlog_operational => papertrail
</Route>

<Route eventlog_audit_papertrail>
  Path eventlog_audit => papertrail
</Route>

<Route generic_worker_log_papertrail>
  Path generic_worker_log => papertrail
</Route>

<Route generic_worker_wrapper_log_papertrail>
  Path generic_worker_wrapper_log => papertrail
</Route>

<Route generic_worker_service_log_papertrail>
  Path generic_worker_service_log => papertrail
</Route>

<Route taskcluster_worker_runner_log_papertrail>
  Path taskcluster_worker_runner_log => papertrail
</Route>

<Route ec2_config_log_papertrail>
  Path ec2_config_log => papertrail
</Route>

<Route nxlog_papertrail>
  Path nxlog => papertrail
</Route>
